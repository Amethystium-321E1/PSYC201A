library(tidyverse)
library(ggplot2) # plotting
set.seed(123) # good practice to set a random seed, or else different runs get you different results
library(tidyverse)
library(ggplot2) # plotting
library(tidyverse)
library(ggplot2) # plotting
set.seed(123) # good practice to set a random seed, or else different runs get you different results
make_tea_data <- function(n_total = 48,
sigma = 1.25,
delta = 1.5) {
n_half <- n_total / 2
tibble(condition = c(rep("milk first", n_half), rep("tea first", n_half)),
rating = c(round(
rnorm(n_half, mean = 3.5 + delta, sd = sigma)
),
round(rnorm(
n_half, mean = 3.5, sd = sigma
)))) |>
mutate(rating = if_else(rating > 10, 10, rating),
# truncate if greater than max/min of rating scale
rating = if_else(rating < 1, 1, rating))
}
# YOUR CODE HERE
this_tea_data <- make_tea_data(n_total = 120, delta = 2, sigma = 2)
# STARTER CODE
# Note: `rowwise()` is used to apply `mutate` to each row individually.
# This ensures each participant has a unique `difference` value, simulating realistic individual variation.
tea_data_new_exp <- this_tea_data %>%
rowwise() %>%
mutate(difference = XXX) %>%
mutate(new_rating = rating + difference)
View(this_tea_data)
# STARTER CODE
# Note: `rowwise()` is used to apply `mutate` to each row individually.
# This ensures each participant has a unique `difference` value, simulating realistic individual variation.
tea_data_new_exp <- this_tea_data %>%
rowwise() %>%
mutate(difference = sample(sample(-3:3, 1))) %>%
mutate(new_rating = rating + difference)
# STARTER CODE
# Note: `rowwise()` is used to apply `mutate` to each row individually.
# This ensures each participant has a unique `difference` value, simulating realistic individual variation.
tea_data_new_exp <- this_tea_data %>%
rowwise() %>%
mutate(difference = sample(-3:3, 1)) %>%
mutate(new_rating = rating + difference)
View(tea_data_new_exp)
# YOUR CODE HERE
ggplot(data = tea_data_new_exp, aes(x=rating , y=new_rating)) +
geom_point() +
geom_smooth()
# YOUR CODE HERE
ggplot(data = tea_data_new_exp, aes(x = rating, y = new_rating)) +
geom_point(alpha = 0.5) +
geom_jitter(width = 0.2, height = 0.2) +
geom_smooth() +
xlab("Rating") +
ylab("New Rating") +
theme_minimal()
cor.test(x=tea_data_new_exp$rating, y=tea_data_new_exp$new_rating)
# YOUR DATA WRANGLING CODE HERE
tea_data_long <- tea_data_new_exp %>%
pivot_longer(cols = c(rating, new_rating),
names_to = "experiment",
values_to = "rating_value")
ggplot(data = tea_data_long, aes(x = experiment, y = rating_value, group = participant_id)) +
geom_line() +
facet_wrap(~condition) +
xlab("Experiment") +
ylab("Rating Value") +
theme_minimal()
View(tea_data_long)
# YOUR DATA WRANGLING CODE HERE
tea_data_long <- tea_data_new_exp %>%
pivot_longer(cols = c(rating, new_rating),
names_to = "experiment",
values_to = "rating_value")
ggplot(data = tea_data_long, aes(x = experiment, y = rating_value, group = condition)) +
geom_line() +
facet_wrap(~condition) +
xlab("Experiment") +
ylab("Rating Value") +
theme_minimal()
# YOUR DATA WRANGLING CODE HERE
tea_data_long <- tea_data_new_exp %>%
pivot_longer(cols = c(rating, new_rating),
names_to = "experiment",
values_to = "rating_value")
ggplot(data = tea_data_long, aes(x = experiment, y = rating_value) +
geom_line() +
facet_wrap(~condition) +
xlab("Experiment") +
ylab("Rating Value") +
theme_minimal()
# YOUR DATA WRANGLING CODE HERE
tea_data_long <- tea_data_new_exp %>%
pivot_longer(cols = c(rating, new_rating),
names_to = "experiment",
values_to = "rating_value")
ggplot(data = tea_data_long, aes(x = experiment, y = rating_value, group = condition)) +
geom_line() +
facet_wrap(~condition) +
xlab("Experiment") +
ylab("Rating Value")
# YOUR DATA WRANGLING CODE HERE
tea_data_long <- tea_data_new_exp %>%
pivot_longer(cols = c(rating, new_rating),
names_to = "experiment",
values_to = "rating_value")
tea_data_long <- tea_data_long %>%
mutate(ID = rep(1:(n()/2), each = 2))
ggplot(data = tea_data_long, aes(x = experiment, y = rating_value, group = condition)) +
geom_line() +
facet_wrap(~condition) +
xlab("Experiment") +
ylab("Rating Value")
# YOUR DATA WRANGLING CODE HERE
tea_data_long <- tea_data_new_exp %>%
pivot_longer(cols = c(rating, new_rating),
names_to = "experiment",
values_to = "rating_value")
tea_data_long <- tea_data_long %>%
mutate(ID = rep(1:(n()/2), each = 2))
ggplot(data = tea_data_long, aes(x = experiment, y = rating_value, group = ID)) +
geom_line() +
facet_wrap(~condition) +
xlab("Experiment") +
ylab("Rating Value")
